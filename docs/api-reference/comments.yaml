openapi: 3.0.3
info:
  title: Comments API
  version: 1.0.0
  description: API for managing comments on posts
  contact:
    name: API Support
    email: dev@telar.dev
  license:
    name: MIT
    url: https://github.com/qolzam/telar/blob/master/LICENSE

servers:
  - url: http://localhost:3000/comments
    description: Development server

paths:
  /:
    post:
      summary: Create a new comment
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/CreateResponse'
        '400':
          $ref: './common.yaml#/components/responses/BadRequest'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

    put:
      summary: Update a comment
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
      responses:
        '200':
          description: Comment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '400':
          $ref: './common.yaml#/components/responses/BadRequest'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '404':
          $ref: './common.yaml#/components/responses/NotFound'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

    get:
      summary: Get comments by post ID
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      parameters:
        - name: postId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Comments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
        '400':
          $ref: './common.yaml#/components/responses/BadRequest'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /profile:
    put:
      summary: Update comment profile information
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentProfileRequest'
      responses:
        '200':
          description: Comment profile updated successfully
        '400':
          $ref: './common.yaml#/components/responses/BadRequest'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /{commentId}:
    get:
      summary: Get a specific comment
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Comment retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '404':
          $ref: './common.yaml#/components/responses/NotFound'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /id/{commentId}/post/{postId}:
    delete:
      summary: Delete a specific comment
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          $ref: './common.yaml#/components/responses/NoContent'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '404':
          $ref: './common.yaml#/components/responses/NotFound'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

  /post/{postId}:
    delete:
      summary: Delete all comments for a specific post
      tags: [Comments]
      security:
        - HMACAuth: []
        - JWTAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          $ref: './common.yaml#/components/responses/NoContent'
        '401':
          $ref: './common.yaml#/components/responses/Unauthorized'
        '500':
          $ref: './common.yaml#/components/responses/InternalServerError'

components:
  schemas:
    CreateCommentRequest:
      type: object
      required:
        - postId
        - text
      properties:
        postId:
          type: string
          format: uuid
        text:
          type: string
          minLength: 1
          maxLength: 1000

    UpdateCommentRequest:
      type: object
      required:
        - objectId
        - text
      properties:
        objectId:
          type: string
          format: uuid
        text:
          type: string
          minLength: 1
          maxLength: 1000

    UpdateCommentProfileRequest:
      allOf:
        - $ref: './common.yaml#/components/schemas/UserReference'
        - type: object
          required:
            - userId

    CommentResponse:
      allOf:
        - $ref: './common.yaml#/components/schemas/TimestampFields'
        - type: object
          properties:
            objectId:
              type: string
              format: uuid
            score:
              type: integer
              format: int64
            owner:
              $ref: './common.yaml#/components/schemas/UserReference'
            postId:
              type: string
              format: uuid
            text:
              type: string
            deleted:
              type: boolean

  securitySchemes:
    JWTAuth:
      $ref: './common.yaml#/components/securitySchemes/JWTAuth'
    HMACAuth:
      $ref: './common.yaml#/components/securitySchemes/HMACAuth'
